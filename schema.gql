# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

directive @upper on FIELD_DEFINITION

"""recipe """
type Recipe {
  id: ID!
  description: String
  creationDate: Date!
  ingredients: [String!]!
  title: String!
}

"""Date custom scalar type"""
scalar Date

"""test_choice """
type TestChoice {
  userId: ID!
  paperId: ID!
  user: User!
  paper: Paper!
  score: Int!
}

"""question """
type Question {
  questionNum: ID!
  paperId: ID!
  paper: Paper!
  content: String!
}

"""paper """
type Paper {
  id: ID!
  name: String!
  testResults: [TestResult!]!
  testChoices: [TestChoice!]!
  questions: [Question!]!
}

"""test_result """
type TestResult {
  userId: ID!
  paperId: ID!
  user: User!
  paper: Paper!
  totalScore: Int!
  isSubmitted: Boolean!
}

"""user """
type User {
  id: ID!
  email: String!
  testResults: [TestResult!]!
  testChoices: [TestChoice!]!
}

type Query {
  recipe(id: String!): Recipe!
  recipes(skip: Int = 0, take: Int = 25): [Recipe!]!
  user(id: String!): User!
  users: [User!]!
  paper(id: String!): Paper!
  papers: [Paper!]!
  testResult(userId: String!, paperId: String!): TestResult!
  testResults: [TestResult!]!
  question(questionNum: String!, paperId: String!): Question!
  questions: [Question!]!
}

type Mutation {
  addRecipe(newRecipeData: NewRecipeInput!): Recipe!
  removeRecipe(id: String!): Boolean!
  createUser(createQuestionInput: CreateQuestionInput!): Question!
  updateUser(questionNum: String!, paperId: String!, updateQuestionInput: UpdateQuestionInput!): Question!
  removeUser(questionNum: String!, paperId: String!): Question!
  createPaper(createPaperInput: CreatePaperInput!): Paper!
  updatePaper(id: String!, updatePaperInput: UpdatePaperInput!): Paper!
  removePaper(id: String!): Paper!
  updateTestResult(userId: String!, paperId: String!, updateTestResultInput: UpdateTestResultInput!): TestResult!
  removetestResult(userId: String!, paperId: String!): TestResult!
}

input NewRecipeInput {
  title: String!
  description: String
  ingredients: [String!]!
}

input CreateQuestionInput {
  questionNum: String!
  paperId: String!
  content: String!
}

input UpdateQuestionInput {
  questionNum: String
  paperId: String
  content: String
}

input CreatePaperInput {
  name: String!
}

input UpdatePaperInput {
  name: String!
}

input UpdateTestResultInput {
  totalScore: Int
  isSubmitted: Boolean
}

type Subscription {
  recipeAdded: Recipe!
}